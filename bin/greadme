#!/usr/bin/env node

var fs = require('fs')
var md = require('marked')
var http = require('http')
var request = require('request')

// TODO configurable
var host = 'localhost'
var port = 8124

var dir = process.cwd()
var exts = 'markdown md'.split(' ')

var file = process.argv[2] || ''

if (!file) {
  var names = 'README Readme readme'.split(' ')
  names.some(function (name) {
    return exts.some(function (ext) {
      try {
        var filename = dir + '/' + name + '.' + ext
        var stat = fs.statSync(filename)
        file = filename
        return true
      } catch (err) {
        return false
      }
    })
  })
}

if (!file) {
  console.error('no readme.md found')
  return process.exit(1)
}

function getHTML(file, css) {
  var contents = fs.readFileSync(file, 'utf8')
  var html = md(contents)


  html = '<div id="readme"><article class="markdown-body entry-content">'
       + html
       + '</article></div>'

  html = '<style type="text/css">'
       + '#readme { width: 920px;margin: 0 auto; }'
       + '</style>'
       + html;

  css.forEach(function (href) {
    html = '<link href="' + href + '" rel="stylesheet">' + html;
  })

  html = '<html><body>' + html + '</body></html>'

  return html;
}

var stylesheet = ''

// get github css
request({ uri: "https://github.com/aheckmann/greadme", timeout: 4000 }, function (err, res, body) {
  var css = []

  if (err) {
    // ignore error, use old css instead
    console.log('\u001B[35m  %s\u001B[0m', 'could not retreive latest github css. using old version');
    css.unshift('/css/style.css')
    stylesheet = fs.readFileSync(__dirname + '/../css/style.css', 'utf8');

  } else {
    var rgx = /href=["']([^"']+\.css)/g
    ;(body || '').replace(rgx, function (_, href) {
      css.unshift(href);
    })
  }

  var server = http.createServer(function (req, res) {
    if (/css$/.test(req.url)) {
      res.writeHead(200, { 'Content-Type': 'text/css' })
      res.end(stylesheet)
      return;
    }

    res.writeHead(200, { 'Content-Type': 'text/html' })
    res.end(getHTML(file, css))
  }).listen(port, host)

  server.on('listening', function () {
    var url = 'http://' + host + ':' + port
    console.log("\n  view your markdown at \u001B[32m%s/\u001B[0m", url)
    console.log('  press CTRL+C to quit')

    // open in browser on mac
    if ('darwin' != process.platform) return

    require('child_process').exec('open ' + url, function (err) {
      // ignore errors
    })
  });

})

